##Комментарий: Данный бот общается с вами, как с хозяином. Этот код использовался в "Rubi_Fox". Цель заключалась в создании 
## лисенка-помошника. Настройки его характера можно заменить в 24, где написано "Хозяин" 
#Бот, который только разговаривает

from openai import OpenAI
import telebot
from gtts import gTTS
import os

# Инициализируем клиента API OpenAI
client = OpenAI(
    api_key="sk-eojihWMYuwlwO4oNjNMX8DbkkkBtLg7I",  # Вставьте ваш ключ API здесь
    base_url="https://api.proxyapi.ru/openai/v1"  # Базовый URL может отличаться
)

# Инициализируем бота
bot = telebot.TeleBot("6866300241:AAFCB2t7a9SwJQdkQDou1Cgexq8iFTdulY4")  # Вставьте токен вашего бота

def ask_question(question):
    """Функция для отправки вопросов и получения ответов от нейросети."""
    try:
        chat_completion = client.chat.completions.create(
            model="gpt-3.5-turbo-1106",
            messages=[{"role": "user", "content":  "Хозяин"+question}]
        )
        # Возвращение ответа от нейросети
        return chat_completion.choices[0].message.content
    except Exception as e:
        return f"Произошла ошибка при попытке общения с нейросетью: {e}"

@bot.message_handler(func=lambda message: True)
def echo_all(message):
    user_input = message.text
    response = ask_question(user_input)
    # Преобразование текстового ответа в аудио
    tts = gTTS(text=response, lang='ru')
    audio_file = 'audio_response.mp3'
    tts.save(audio_file)

    # Отправка аудиофайла пользователю
    with open(audio_file, 'rb') as audio:
        bot.send_audio(message.chat.id, audio)

    # Удаление аудиофайла после отправки
    os.remove(audio_file)

if __name__ == "__main__":
    bot.infinity_polling()
